# +---------------------------------------------------+
# System Restore
# +---------------------------------------------------+
function func_system-restore() {
  func_echo-header

  echo -e ""
  echo -e "System Restore"
  echo -e ""
  echo -e "$red !!!WARNING!!! $clean"
  echo -e "System Restore is intended to be used in disaster recovery"
  echo -e "situations only as a last resort! Rolling back the system"
  echo -e "to a recent backup can have consequences, such as the need to"
  echo -e "clean up MySQL databases and loss of recent configuration changes."
  echo -e ""
  echo -en "$green[eFa]$clean Are you sure you want to continue? (y/N):"
  local TMPRECOVER
  read TMPRECOVER
  local flag=0
  while [[ $flag != "1" ]]
    do
      if [[ $TMPRECOVER == "N" || $TMPRECOVER == "n" || $TMPRECOVER == "" ]]; then
        flag=1
      elif [[ $TMPRECOVER = "Y" || $TMPRECOVER == "y" ]]; then
        # Gather backups
        local BACKUPLIST
        BACKUPLIST=(`find /var/eFa/backup -type f | grep tar\.gz$`)
        if [[ -n $BACKUPLIST ]]; then
          func_echo-header
          echo -e "Backup Listing"
          echo -e ""
          local tLen=${#BACKUPLIST[@]}
          for (( y=0; y<$tLen; y++ ));
          do
            echo -e "$((y+1))) ${BACKUPLIST[$y]}"
          done
          local flag2=0
          echo -e ""
          echo -en "Choose a backup or press $green (e) $clean to exit:"
          while [[ $flag2 != "1" ]]
          do
            local choice
            read choice
            case $choice in
              +([0-9]))  
                if [[ $choice > 0 && $choice < $((tLen+1)) ]]; then
                  echo -e "You have chosen $green $choice $clean"
                  echo -e ""
                  echo -e "$choice) ${BACKUPLIST[$((choice-1))]}"
                  echo -e ""
                  echo -e "Proceed with restore? (y/N)"
                  local TMPRESTORE
                  read TMPRESTORE
                  local flag3=0
                  while [[ $flag3 != "1" ]]
                  do
                    if [[ $TMPRESTORE == "n" || $TMPRESTORE == "N" || $TMPRESTORE == "" ]]; then
                      flag2=1
                      flag3=1
                    elif [[ $TMPRESTORE == "Y" || $TMPRESTORE == "y" ]]; then
                      echo -e "Beginning Restore of ${BACKUPLIST[$((choice-1))]}..."
                      echo -e
                      cd /var/eFa/backup
                      tar xzvf ${BACKUPLIST[$((choice-1))]} --overwrite
                      #fetch SQL root password
                      MYSQLROOTPWD="`grep MYSQLROOTPWD /etc/eFa/MySQL-Config | sed 's/.*://'`"

                      if [[ -f /var/eFa/backup/backup/etc/EFA-Config ]]; then
                        echo "eFa v3 backup detected, performing migration..."
                        RESTOREMYSQLROOTPWD="`grep MYSQLROOTPWD /var/eFa/backup/backup/etc/EFA-Config | sed 's/.*://'`"

                        # If hostname is different, database entries must be updated!
                        OLDHOSTNAME="`grep HOSTNAME /var/eFa/backup/backup/etc/EFA-Config | sed 's/.*://'`"
                        OLDDOMAINNAME="`grep DOMAINNAME var/eFa/backup/backup/etc/EFA-Config | sed 's/.*://'`"
                        HOSTNAME="`grep HOSTNAME /etc/eFa/eFa-Config | sed 's/.*://'`"
                        DOMAINNAME="`grep DOMAINNAME /etc/eFa/eFa-Config | sed 's/.*://'`"

                        # Import database passwords
                        RESTORESAUSERSQLPWD="`grep SAUSERSQLPWD /var/eFa/backup/backup/etc/EFA-Config | sed 's/.*://'`"
                        /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTORESAUSERSQLPWD') WHERE User='sa_user';"
                        RESTOREMAILWATCHSQLPWD="`grep MAILWATCHSQLPWD /var/eFa/backup/backup/etc/EFA-Config | sed 's/.*://'`"
                        /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTOREMAILWATCHSQLPWD') WHERE User='mailwatch';"
                        RESTORESQLGREYSQLPWD="`grep SQLGREYSQLPWD /var/eFa/backup/backup/etc/EFA-Config | sed 's/.*://'`"
                        /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTORESQLGREYSQLPWD') WHERE User='sqlgrey';"
                        RESTOREEFASQLPWD="`grep EFASQLPWD /var/eFa/backup/backup/etc/EFA-Config | sed 's/.*://'`"
                        /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTOREEFASQLPWD') WHERE User='efa';"
                        /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "FLUSH PRIVILEGES;"
                        /usr/bin/mysqladmin -u root -p$MYSQLROOTPWD password "$RESTOREMYSQLROOTPWD"
                        MYSQLROOTPWD=$RESTOREMYSQLROOTPWD
                        # Update eFa-Config with imported values
                        sed -i "/^MAILWATCHSQLPWD:/ c\MAILWATCHSQLPWD:$RESTOREMAILWATCHSQLPWD" /etc/eFa/MailWatch-Config
                        sed -i "/^SAUSERSQLPWD:/ c\SAUSERSQLPWD:$RESTORESAUSERSQLPWD" /etc/eFa/SA-Config
                        sed -i "/^SQLGREYSQLPWD:/ c\SQLGREYSQLPWD:$RESTORESQLGREYSQLPWD" /etc/eFa/SQLGrey-Config
                        sed -i "/^EFASQLPWD:/ c\EFASQLPWD:$RESTOREEFASQLPWD" /etc/eFa/eFaSQL-Config
                        sed -i "/^MYSQLROOTPWD:/ c\MYSQLROOTPWD:$RESTOREMYSQLROOTPWD" /etc/eFa/MySQL-Config

                        mv -f /etc/mail/spamassassin/local.cf /etc/mail/spamassassin/local.cf.v4
                        cp -f /var/eFa/backup/backup/etc/mail/spamassassin/local.cf /etc/mail/spamassassin/local.cf

                        # Keep certain files
                        mv -f /etc/MailScanner/MailScanner.conf /etc/MailScanner/MailScanner.conf.v4
                        mv -f /etc/MailScanner/defaults /etc/MailScanner/defaults.v4
                        mv -f /etc/MailScanner/virus.scanners.conf /etc/MailScanner/virus.scanners.conf.v4
                        mv -f /etc/MailScanner/spamassassin.conf /etc/MailScanner/spamassassin.conf.v4

                        cp -rf /var/eFa/backup/backup/etc/MailScanner/* /etc/MailScanner

                        # Replace old v3 files with v4 but leave v3 variants for review
                        mv -f /etc/MailScanner/MailScanner.conf /etc/MailScanner/MailScanner.conf.v3
                        mv -f /etc/MailScanner/defaults /etc/MailScanner/defautls.v3
                        mv -f /etc/MailScanner/virus.scanners.conf /etc/MailScanner/virus.scanners.conf.v3
                        mv -f /etc/MailScanner/spamassassin.conf /etc/MailScanner/spamassassin.conf.v3

                        mv -f /etc/MailScanner/MailScanner.conf.v4 /etc/MailScanner/MailScanner.conf
                        mv -f /etc/MailScanner/defaults.v4 /etc/MailScanner/defaults
                        mv -f /etc/MailScanner/virus.scanners.conf.v4 /etc/MailScanner/virus.scanners.conf
                        mv -f /etc/MailScanner/spamassassin.conf.v4 /etc/MailScanner/spamassassin.conf

                        # MailScanner Conf
                        cp -f /var/eFa/backup/backup/var/www/html/mailscanner/conf.php /var/www/html/mailscanner/conf.php.v3

                        # Postfix Conf
                        mv -f /etc/postfix/access /etc/postfix/access.v4
                        mv -f /etc/postfix/canonical /etc/postfix/canonical.v4
                        mv -f /etc/postfix/generic /etc/postfix/generic.v4
                        mv -f /etc/postfix/header_checks /etc/postfix/header_checks.v4
                        mv -f /etc/postfix/helo_access /etc/postfix/helo_access.v4
                        mv -f /etc/postfix/main.cf /etc/postfix/main.cf.v4
                        mv -f /etc/postfix/master.cf /etc/postfix/master.cf.v4
                        mv -f /etc/postfix/recipient_access /etc/postfix/recipient_access.v4
                        mv -f /etc/postfix/relocated /etc/postfix/relocated.v4
                        mv -f /etc/postfix/sender_access /etc/postfix/sender_access.v4
                        mv -f /etc/postfix/transport /etc/postfix/transport.v4
                        mv -f /etc/postfix/virtual /etc/postfix/virtual.v4

                        cp -f /var/eFa/backup/backup/etc/postfix/* /etc/postfix

                        # Milter in effect use v4
                        mv -f /etc/postfix/header_checks /etc/postfix/header_checks.v3
                        mv -f /etc/postfix/header_checks.v4 /etc/postfix/header_checks

                        # Several operational changes to main.cf in v4
                        mv -f /etc/postfix/main.cf /etc/postfix/main.cf.v3
                        mv -f /etc/postfix/main.cf.v4 /etc/postfix/main.cf

                        # Ditto
                        mv -f /etc/postfix/master.cf /etc/postfix/master.cf.v3
                        mv -f /etc/postfix/master.cf.v4 /etc/postfix/master.cf

                        # Postmaps
                        postmap /etc/postfix/helo_access.db
                        postmap /etc/postfix/recipient_access.db
                        postmap /etc/postfix/sasl_passwd.db
                        postmap /etc/postfix/sender_access.db
                        postmap /etc/postfix/transport.db
                        postmap /etc/postfix/virtual.db

                        cp -rf /var/eFa/backup/backup/etc/sqlgrey/* /etc/sqlgrey

                        cp -f /var/eFa/backup/backup/etc/sysconfig/eFa_trusted_networks /etc/sysconfig/eFa_trusted_networks

                        cp -rf /var/eFa/backup/backup/etc/unbound/conf.d/* /etc/unbound/conf.d
                        
                        # Restore trim-awl
                        cp -f /var/eFa/backup/backup/usr/sbin/trim-awl /usr/sbin
                      else
                        RESTOREMYSQLROOTPWD="`grep MYSQLROOTPWD /var/eFa/backup/backup/etc/eFa/MySQL-Config | sed 's/.*://'`"
                        if [[ "$MYSQLROOTPWD" != "$RESTOREMYSQLROOTPWD" ]]; then
                          echo "Foreign backup detected, performing import..."
                          
                          # If hostname is different, database entries must be updated!
                          OLDHOSTNAME="`grep HOSTNAME /var/eFa/backup/backup/etc/eFa/eFa-Config | sed 's/.*://'`"
                          OLDDOMAINNAME="`grep DOMAINNAME var/eFa/backup/backup/etc/eFa/eFa-Config | sed 's/.*://'`"
                          HOSTNAME="`grep HOSTNAME /etc/eFa/eFa-Config | sed 's/.*://'`"
                          DOMAINNAME="`grep DOMAINNAME /etc/eFa/eFa-Config | sed 's/.*://'`"
                        
                          # Restore importable configurations
                          cp -f /var/eFa/backup/backup/etc/mail/spamassassin/local.cf /etc/mail/spamassassin/local.cf
                          cp -rf /var/eFa/backup/backup/etc/MailScanner/* /etc/MailScanner
                          cp -rf /var/eFa/backup/backup/etc/postfix/* /etc/postfix
                          cp -f /var/eFa/backup/backup/etc/sysconfig/eFa_trusted_networks /etc/sysconfig/eFa_trusted_networks

                          # Postmaps
                          postmap /etc/postfix/helo_access.db
                          postmap /etc/postfix/recipient_access.db
                          postmap /etc/postfix/sasl_passwd.db
                          postmap /etc/postfix/sender_access.db
                          postmap /etc/postfix/transport.db
                          postmap /etc/postfix/virtual.db

                          cp -rf /var/eFa/backup/backup/etc/sqlgrey/* /etc/sqlgrey
                          cp -rf /var/eFa/backup/backup/etc/unbound/conf.d/* /etc/unbound/conf.d
                          cp -f /var/eFa/backup/backup/var/www/html/mailscanner/conf.php /var/www/html/mailscanner/conf.php
                          # Import database passwords
                          RESTORESAUSERSQLPWD="`grep SAUSERSQLPWD /var/eFa/backup/backup/etc/eFa/SA-Config | sed 's/.*://'`"
                          /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTORESAUSERSQLPWD') WHERE User='sa_user';"
                          RESTOREMAILWATCHSQLPWD="`grep MAILWATCHSQLPWD /var/eFa/backup/backup/etc/eFa/MailWatch-Config | sed 's/.*://'`"
                          /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTOREMAILWATCHSQLPWD') WHERE User='mailwatch';"
                          RESTORESQLGREYSQLPWD="`grep SQLGREYSQLPWD /var/eFa/backup/backup/etc/eFa/SQLGrey-Config | sed 's/.*://'`"
                          /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTORESQLGREYSQLPWD') WHERE User='sqlgrey';"
                          RESTOREEFASQLPWD="`grep EFASQLPWD /var/eFa/backup/backup/etc/eFa/eFaSQL-Config | sed 's/.*://'`"
                          /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "UPDATE mysql.user SET Password=PASSWORD('$RESTOREEFASQLPWD') WHERE User='efa';"
                          /usr/bin/mysql -u root -p"$MYSQLROOTPWD" -e "FLUSH PRIVILEGES;"
                          /usr/bin/mysqladmin -u root -p$MYSQLROOTPWD password "$RESTOREMYSQLROOTPWD"
                          MYSQLROOTPWD=$RESTOREMYSQLROOTPWD
                          # Update eFa-Config with imported values
                          sed -i "/^MAILWATCHSQLPWD:/ c\MAILWATCHSQLPWD:$RESTOREMAILWATCHSQLPWD" /etc/eFa/MailWatch-Config
                          sed -i "/^SAUSERSQLPWD:/ c\SAUSERSQLPWD:$RESTORESAUSERSQLPWD" /etc/eFa/SA-Config
                          sed -i "/^SQLGREYSQLPWD:/ c\SQLGREYSQLPWD:$RESTORESQLGREYSQLPWD" /etc/eFa/SQLGrey-Config
                          sed -i "/^EFASQLPWD:/ c\EFASQLPWD:$RESTOREEFASQLPWD" /etc/eFa/eFaSQL-Config
                          sed -i "/^MYSQLROOTPWD:/ c\MYSQLROOTPWD:$RESTOREMYSQLROOTPWD" /etc/eFa/MySQL-Config

                          # Restore trim-awl
                          cp -f /var/eFa/backup/backup/usr/sbin/trim-awl /usr/sbin
                        fi

                        cp -rf /var/eFa/backup/backup/etc/* /etc
                        cp -rf /var/eFa/backup/backup/var/* /var
                        cp -rf /usr/eFa/backup/backup/usr/* /usr

                        OLDHOSTNAME="`grep HOSTNAME /etc/eFa/eFa-Config | sed 's/.*://'`"
                        OLDDOMAINNAME="`grep DOMAINNAME /etc/eFa/eFa-Config | sed 's/.*://'`"
                        HOSTNAME=$OLDHOSTNAME
                        DOMAINNAME=$OLDDOM
                      fi
                      cd /var/eFa/backup/backup/sql
                      # Restore SQL databases
                      mysql --user=root --password=$MYSQLROOTPWD < backup.sql
                      rm -rf /var/eFa/backup/backup
                      
                      # Are hostnames different from original?
                      if [[ $HOSTNAME != $OLDHOSTNAME || $DOMAINNAME != $OLDDOMAINNAME ]];
                        mysql -u mailwatch --password=$MAILWATCHSQLPWD mailscanner -e "\
                        LOCK TABLES maillog WRITE; \
                        ALTER TABLE maillog MODIFY COLUMN \`timestamp\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP; \
                        UPDATE maillog SET hostname='$HOSTNAME.$DOMAINNAME' WHERE hostname='$OLDHOSTNAME.$OLDDOMAINNAME'; \
                        ALTER TABLE maillog MODIFY COLUMN \`timestamp\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP; \
                        LOCK TABLES mtalog WRITE; \
                        UPDATE mtalog SET host='$HOSTNAME' WHERE host='$OLDHOSTNAME'; \
                        UNLOCK TABLES;" 
                      fi

                      echo -e "Restore Complete!"
                      echo -e ""
                      echo -e "A restart is needed to complete restore.  Press enter to reboot."
                      pause
                      shutdown -r now
                      flag3=1
                      flag2=1
                      flag=1
                    fi
                  done
                 else
                   echo -e "$red $choice $clean is not a valid choice."
                   echo -en "Choose a backup or press $green e) $clean to exit:"
                 fi
                 ;;
                     e)
                 pause
                 flag3=1
                 flag2=1  
                 flag=1
                 ;;
                     *) 
                   echo -e "$red $choice $clean is not a valid choice."
                   echo -en "Choose a backup or press $green e) $clean to exit:"
                 ;;
            esac
          done
        else
          echo "No backups were found!"
          echo "Press enter to exit."
          pause
        fi
        flag=1
      else
        echo -e "An invalid option $red $TMPRECOVER $clean was entered."
        echo -en "$green[eFa]$clean Are you sure you want to continue? (y/N):"
        read TMPRECOVER
      fi
    done

  pause

}
# +---------------------------------------------------+